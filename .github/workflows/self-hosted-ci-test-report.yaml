name: Run all test and generate report

on:
  push:
    branches:
      - main

jobs:
<<<<<<< HEAD
  build:
    runs-on: self-hosted
=======
  build_test_report:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/xs-mlvp/uc4xs:latest
      options: --env GITHUB_TOKEN=$GITHUB_TOKEN

    env:
      GITHUB_TOKEN: ${{ secrets.WEB_PUSH_KEY }}
>>>>>>> origin

    steps:
    - name: Set Up timezone
      uses: szenius/set-timezone@v2.0
      with:
        timezoneLinux: "Asia/Shanghai"

<<<<<<< HEAD
    - name: Checkout UnityChipForXiangShan
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Check Commit in ut_*
      run: |
        skip=true
        modified_files=$(git diff --name-only HEAD~1 HEAD)
        for file in $modified_files; do
          if [[ $file == ut_*/* ]]; then
            echo "New commits found: $file"
            skip=false
          fi
        done
        echo "SKIP=$skip" >> $GITHUB_ENV
      shell: bash

    - name: Install dependencies
      if: env.SKIP == 'false'
      run: |
        pip3 uninstall -r requirements.txt -y
        pip3 install -r requirements.txt

    - name: Run tests and generate report
      if: env.SKIP == 'false'
      run: |
        make clean
        make CFG=configs/ci.yaml args="-n 32"

    - name: Checkout xs-mlvp.github.io repository
      if: env.SKIP == 'false'
      uses: actions/checkout@v4
      with:
        repository: 'XS-MLVP/xs-mlvp.github.io'
        token: ${{ secrets.WEB_PUSH_KEY }}
        path: 'xs-mlvp.github.io'

    - name: Push Report to xs-mlvp.github.io
      if: env.SKIP == 'false'
      run: |
        cp -r out/report/* xs-mlvp.github.io/UnityChipForXiangShan/data/reports/
        cd xs-mlvp.github.io
        git config user.name "github-actions[bot]"
        git config user.email "22570332+github-actions[bot]@users.noreply.github.com"
        git add UnityChipForXiangShan/data/reports
        git commit -m reprort`date +%Y%m%d%H%M%S`
        git push
        echo "Sync complete"
=======
    - name: Use docker run all tests
      run: |
        bash /home/run_ci.sh
      shell: bash
>>>>>>> origin
