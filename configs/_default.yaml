# coding=utf8
# ***************************************************************************************
# This project is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#          http://license.coscl.org.cn/MulanPSL2
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
#
# See the Mulan PSL v2 for more details.
# **************************************************************************************/

# Default configuration file
# Configuration load order: _default.yaml -> user-specified *.yaml -> command line arguments e.g., log.term-level='debug'

# RTL configuration
rtl:
  # RTL download URL, fetch all *.gz.tar files from this URL as target RTL
  base-url: https://raw.githubusercontent.com/XS-MLVP/UnityChipXiangShanRTLs/refs/heads/main/README.md
  # RTL version to download e.g., openxiangshan-kmh-97e37a2237-24092701
  version: latest
  # Directory to store RTL, relative to the current configuration file path
  cache-dir: "%{root}/rtl"

# Test case configuration (tags and cases support wildcards)
test:
  # Skip tags, all test cases with these tags will be skipped
  skip-tags: ["LONG_TIME_RUN", "RARELY_USED", "REGRESSION", "CI"]
  # Run tags, only test cases with these tags will be executed (skip-tags override run-tags)
  run-tags: []
  # Skip cases, all test cases with these names (or module names) will be skipped
  skip-cases: []
  # Run cases, only test cases with these names (or module names) will be executed (skip-cases override run-cases)
  run-cases: []
  # Skip exceptions, all test cases that raise these exceptions will be skipped
  skip-exceptions: []

# Output configuration
output:
  # Output directory, relative to the current configuration file path
  out-dir: "%{root}/out"

# Test report configuration
report:
  # Report generation directory, relative to output.out-dir
  report-dir: "report"
  # Report name, supports variable substitution: %{host} hostname, %{pid} process ID, %{time} current time
  report-name: "%{time}-%{gitag}/index.html"
  # Report content
  information:
    # Report title
    title: "XiangShan KMH Test Report"
    # Report user information
    user:
      name: "User"
      email: "User@example.email.com"
    # Report user information
    line_grate: 99
    # Other information to display, key is the title, value is the content
    meta:
      version: "%{giturl}"

# Log configuration
log:
  # Level categories: debug, info, warning, error
  # Root log level
  root-level: "debug"
  # Terminal log level
  term-level: "info"
  # Directory to store log files, relative to the outout.out-dir path
  file-dir: "log"
  # Log file name, supports variable substitution: %{host} hostname, %{pid} process ID, %{time} current time
  file-name: "%{host}-%{pid}-%{time}.log"
  # File log level
  file-level: "info"

# Doc result configuration (this data is used to populate charts and other statistics in
#   the documents, and the raw data comes from the report generated by toffee-test).
#   After run test, use `make doc` to check the result.
doc-result:
  # Process result or not
  disable: False
  # Target duts and their structure
  dutree: "%{root}/configs/dutree/xiangshan-kmh.yaml"
  # Result path, relative to the current configuration file path
  result-name: "ut_data_progress.json"
  report-link: "%{root}/documents/static/data/reports"
